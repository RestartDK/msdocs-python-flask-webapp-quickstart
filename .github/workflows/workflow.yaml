name: Deploy infra and backend of MSDOCS
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    env:
      RESOURCE_GROUP: BCSAI2024-DEVOPS-STUDENTS-B-DEV
    steps:
      - uses: actions/checkout@v3

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Azure Infrastructure
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: ./main.bicep
          parameters: ./main.parameters.json

  build-and-push-image:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    env:
      KEY_VAULT_NAME_DEV: "dkumlin-demo-keyvault"
      KEY_VAULT_SECRET_ACR_USERNAME: "acr-username"
      KEY_VAULT_SECRET_ACR_PASSWORD: "acr-password0"
      CONTAINER_REGISTRY_SERVER_URL_DEV: "dkumlinacrdemo.azurecr.io"
      IMAGE_NAME_DEV: "dkumlin-demo-image"
    steps:
      - uses: actions/checkout@v3

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Docker Registry Credentials
        id: acr-creds
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Attempting to access key vault: ${{ env.KEY_VAULT_NAME_DEV }}"
            username=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_ACR_USERNAME }} --vault-name ${{ env.KEY_VAULT_NAME_DEV }} --query value -o tsv)
            password=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_ACR_PASSWORD }} --vault-name ${{ env.KEY_VAULT_NAME_DEV }} --query value -o tsv)
            echo "username=$username" >> $GITHUB_OUTPUT
            echo "password=$password" >> $GITHUB_OUTPUT

      - name: Docker Login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.CONTAINER_REGISTRY_SERVER_URL_DEV }}
          username: ${{ steps.acr-creds.outputs.username }}
          password: ${{ steps.acr-creds.outputs.password }}

      - name: Set Image Version
        id: image-version
        run: echo "version=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.CONTAINER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:${{ steps.image-version.outputs.version }} . 
          docker tag ${{ env.CONTAINER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:${{ steps.image-version.outputs.version }} ${{ env.CONTAINER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:latest
          docker push ${{ env.CONTAINER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:${{ steps.image-version.outputs.version }}
          docker push ${{ env.CONTAINER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:latest

  deploy-webapp:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    env:
      CONTAINER_REGISTRY_SERVER_URL_DEV: "dkumlinacrdemo.azurecr.io"
      IMAGE_NAME_DEV: "dkumlin-demo-image"
      WEB_APP: "dkumlin-demo-web-app"
    steps:
      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEB_APP }}
          images: "${{ env.CONTAINER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:latest"
